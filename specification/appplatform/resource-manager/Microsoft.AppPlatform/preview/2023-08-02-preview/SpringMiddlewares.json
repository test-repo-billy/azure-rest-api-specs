{
  "swagger": "2.0",
  "info": {
    "version": "2023-08-02-preview",
    "title": "AppPlatformManagementClient"
  },
  "host": "management.azure.com",
  "schemes": [
    "https"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AppPlatform/javaEnvironments/{javaEnvironmentName}/eurekaServers": {
      "get": {
        "tags": [
          "EurekaServers"
        ],
        "description": "List the eureka server settings.",
        "operationId": "MiddlewareEurekaServers_List",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/JavaEnvironmentNameParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Success. The response describes the corresponding eureka server settings.",
            "schema": {
              "$ref": "#/definitions/MiddlewareEurekaServerResourceCollection"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "List Eureka Servers": {
            "$ref": "./examples/v2/SpringMiddlewares/EurekaServers_List.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AppPlatform/javaEnvironments/{javaEnvironmentName}/configServers": {
      "get": {
        "tags": [
          "ConfigServers"
        ],
        "description": "List the config server settings.",
        "operationId": "MiddlewareConfigServers_List",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/JavaEnvironmentNameParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Success. The response describes the corresponding config server settings.",
            "schema": {
              "$ref": "#/definitions/ConfigServerResourceCollection"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "List Config Server": {
            "$ref": "./examples/v2/SpringMiddlewares/ConfigServers_List.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AppPlatform/javaEnvironments/{javaEnvironmentName}/configServers/{configServerName}": {
      "get": {
        "tags": [
          "ConfigServers"
        ],
        "summary": "Get the config server and its properties.",
        "description": "Operation to get the config server and its properties.",
        "operationId": "MiddlewareConfigServers_Get",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/JavaEnvironmentNameParameter"
          },
          {
            "$ref": "#/parameters/ConfigServerNameParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Success. The response describes the corresponding Config Server.",
            "schema": {
              "$ref": "#/definitions/MiddlewareConfigServer"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Get Config Servers": {
            "$ref": "./examples/v2/SpringMiddlewares/ConfigServers_Get.json"
          }
        }
      },
      "put": {
        "tags": [
          "ConfigServers"
        ],
        "summary": "Create or update the config server middleware.",
        "description": "Operation to create or update the config server.",
        "operationId": "MiddlewareConfigServers_CreateOrUpdate",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/JavaEnvironmentNameParameter"
          },
          {
            "$ref": "#/parameters/ConfigServerNameParameter"
          },
          {
            "$ref": "#/parameters/ConfigServerEnvelopeParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Success. The response describes the updated Config Server.",
            "schema": {
              "$ref": "#/definitions/MiddlewareConfigServer"
            }
          },
          "201": {
            "description": "Created. The response indicates the exiting Config Server is now updating and contains a Location\r\nheader to query the operation result.",
            "schema": {
              "$ref": "#/definitions/MiddlewareConfigServer"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Create or update Config Servers": {
            "$ref": "./examples/v2/SpringMiddlewares/ConfigServers_UpdatePut.json"
          }
        },
        "x-ms-long-running-operation": true
      },
      "patch": {
        "tags": [
          "ConfigServers"
        ],
        "summary": "Update the config server middleware.",
        "description": "Operation to update the config server.",
        "operationId": "MiddlewareConfigServers_UpdatePatch",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/JavaEnvironmentNameParameter"
          },
          {
            "$ref": "#/parameters/ConfigServerNameParameter"
          },
          {
            "$ref": "#/parameters/ConfigServerEnvelopeParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Success. The response describes the updated Config Server.",
            "schema": {
              "$ref": "#/definitions/MiddlewareConfigServer"
            }
          },
          "202": {
            "description": "Accepted. The response indicates the exiting Config Server is now updating and contains a Location\r\nheader to query the operation result.",
            "headers": {
              "Location": {
                "type": "string"
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-examples": {
          "Update Config Servers": {
            "$ref": "./examples/v2/SpringMiddlewares/ConfigServers_UpdatePatch.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AppPlatform/javaEnvironments/{javaEnvironmentName}/configServers/{configServerName}/validate": {
      "post": {
        "tags": [
          "ConfigServers"
        ],
        "summary": "Validate the config server middleware settings.",
        "description": "Check if the config server settings are valid.",
        "operationId": "MiddlewareConfigServers_Validate",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/JavaEnvironmentNameParameter"
          },
          {
            "$ref": "#/parameters/ConfigServerNameParameter"
          },
          {
            "$ref": "#/parameters/ConfigServerSettingsParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Success. The response describes the validation result of Config Server.",
            "schema": {
              "$ref": "#/definitions/MiddlewareConfigServerSettingsValidateResult"
            }
          },
          "202": {
            "description": "Accepted. The response indicates the ConfigServerSetting is validating.",
            "headers": {
              "Location": {
                "type": "string"
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-examples": {
          "Validate Config Servers": {
            "$ref": "./examples/v2/SpringMiddlewares/ConfigServers_Validate.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AppPlatform/javaEnvironments/{javaEnvironmentName}/eurekaServers/{eurekaServerName}": {
      "get": {
        "tags": [
          "EurekaServers"
        ],
        "summary": "Get the eureka server middleware settings.",
        "description": "Get the eureka server settings.",
        "operationId": "MiddlewareEurekaServers_Get",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/JavaEnvironmentNameParameter"
          },
          {
            "$ref": "#/parameters/EurekaServerNameParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Success. The response describes the corresponding eureka server settings.",
            "schema": {
              "$ref": "#/definitions/MiddlewareEurekaServer"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Get Eureka Servers": {
            "$ref": "./examples/v2/SpringMiddlewares/EurekaServers_Get.json"
          }
        }
      },
      "put": {
        "tags": [
          "EurekaServers"
        ],
        "summary": "Create or update the eureka server settings.",
        "description": "The operation to create or update the eureka server settings.",
        "operationId": "MiddlewareEurekaServers_CreateOrUpdate",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/JavaEnvironmentNameParameter"
          },
          {
            "$ref": "#/parameters/EurekaServerNameParameter"
          },
          {
            "$ref": "#/parameters/EurekaServerEnvelopeParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Success. The response describes the updated eureka server settings.",
            "schema": {
              "$ref": "#/definitions/MiddlewareEurekaServer"
            }
          },
          "201": {
            "description": "Created. The response indicates the exiting eureka server settings are now updating and contain a Azure-AsyncOperation\r\nheader to query the operation result.",
            "schema": {
              "$ref": "#/definitions/MiddlewareEurekaServer"
            },
            "headers": {
              "Location": {
                "type": "string"
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-examples": {
          "Create or update Eureka Servers": {
            "$ref": "./examples/v2/SpringMiddlewares/EurekaServers_UpdatePut.json"
          }
        }
      },
      "patch": {
        "tags": [
          "EurekaServers"
        ],
        "summary": "Update the eureka server settings.",
        "description": "The operation to update the eureka server settings.",
        "operationId": "MiddlewareEurekaServers_UpdatePatch",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/JavaEnvironmentNameParameter"
          },
          {
            "$ref": "#/parameters/EurekaServerNameParameter"
          },
          {
            "$ref": "#/parameters/EurekaServerEnvelopeParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Success. The response describes the updated eureka server settings.",
            "schema": {
              "$ref": "#/definitions/MiddlewareEurekaServer"
            }
          },
          "202": {
            "description": "Accepted. The response indicates the exiting eureka server settings are now updating and contain a Location\r\nheader to query the operation result.",
            "headers": {
              "Location": {
                "type": "string"
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-examples": {
          "Update Eureka Servers": {
            "$ref": "./examples/v2/SpringMiddlewares/EurekaServers_UpdatePatch.json"
          }
        }
      }
    }
  },
  "definitions": {
    "MiddlewareConfigServer": {
      "description": "Config Server resource",
      "type": "object",
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ProxyResource"
        }
      ],
      "properties": {
        "properties": {
          "description": "Config server git properties payload",
          "type": "object",
          "properties": {
            "provisioningState": {
              "description": "State of the config server.",
              "enum": [
                "Failed",
                "Updating",
                "Succeeded",
                "Canceled"
              ],
              "type": "string",
              "readOnly": true,
              "x-ms-enum": {
                "name": "ConfigServerState",
                "modelAsString": true
              }
            },
            "enabledState": {
              "type": "string",
              "description": "Enabled state of the config server. This is only used in Consumption tier.",
              "enum": [
                "Enabled",
                "Disabled"
              ],
              "x-ms-enum": {
                "modelAsString": true,
                "name": "ConfigServerEnabledState",
                "values": [
                  {
                    "description": "Enable the config server.",
                    "value": "Enabled"
                  },
                  {
                    "description": "Disable the config server.",
                    "value": "Disabled"
                  }
                ]
              }
            },
            "configServer": {
              "$ref": "#/definitions/MiddlewareConfigServerSettings",
              "description": "Settings of config server."
            }
          },
          "x-ms-client-flatten": true
        }
      }
    },
    "MiddlewareEurekaServer": {
      "description": "Eureka server resource",
      "type": "object",
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ProxyResource"
        }
      ],
      "properties": {
        "properties": {
          "description": "Eureka server properties payload",
          "type": "object",
          "properties": {
            "provisioningState": {
              "description": "State of the eureka server.",
              "enum": [
                "Failed",
                "Updating",
                "Succeeded",
                "Canceled"
              ],
              "type": "string",
              "readOnly": true,
              "x-ms-enum": {
                "name": "EurekaServerState",
                "modelAsString": true
              }
            },
            "dashboardUri": {
              "type": "string",
              "description": "The uri to visit the eureka server dashboard"
            },
            "enabledState": {
              "type": "string",
              "description": "Enabled state of the eureka server. This is only used in Consumption tier.",
              "enum": [
                "Enabled",
                "Disabled"
              ],
              "x-ms-enum": {
                "modelAsString": true,
                "name": "EurekaServerEnabledState",
                "values": [
                  {
                    "description": "Enable the eureka server.",
                    "value": "Enabled"
                  },
                  {
                    "description": "Disable the eureka server.",
                    "value": "Disabled"
                  }
                ]
              }
            }
          },
          "x-ms-client-flatten": true
        }
      }
    },
    "ConfigServerResourceCollection": {
      "description": "Azure Spring Apps Config Server collection ARM resource.",
      "required": [
        "value"
      ],
      "type": "object",
      "properties": {
        "value": {
          "description": "Collection of resources.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/MiddlewareConfigServer"
          }
        },
        "nextLink": {
          "description": "Link to next page of resources.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "MiddlewareEurekaServerResourceCollection": {
      "description": "Azure Spring Apps Eureka Server collection ARM resource.",
      "required": [
        "value"
      ],
      "type": "object",
      "properties": {
        "value": {
          "description": "Collection of resources.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/MiddlewareEurekaServer"
          }
        },
        "nextLink": {
          "description": "Link to next page of resources.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "MiddlewareConfigServerSettings": {
      "description": "The settings of config server.",
      "type": "object",
      "properties": {
        "gitProperty": {
          "$ref": "#/definitions/MiddlewareConfigServerGitProperty",
          "description": "Property of git environment."
        }
      }
    },
    "MiddlewareConfigServerGitProperty": {
      "description": "Property of git.",
      "required": [
        "uri"
      ],
      "type": "object",
      "properties": {
        "repositories": {
          "description": "Repositories of git.",
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/MiddlewareGitPatternRepository"
          },
          "x-ms-identifiers": [
            "name"
          ]
        },
        "uri": {
          "description": "URI of the repository",
          "type": "string"
        },
        "label": {
          "description": "Label of the repository",
          "type": "string"
        },
        "searchPaths": {
          "description": "Searching path of the repository",
          "uniqueItems": false,
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "username": {
          "description": "Username of git repository basic auth.",
          "type": "string"
        },
        "password": {
          "description": "Password of git repository basic auth.",
          "type": "string",
          "x-ms-secret": true
        },
        "hostKey": {
          "description": "Public sshKey of git repository.",
          "type": "string"
        },
        "hostKeyAlgorithm": {
          "description": "SshKey algorithm of git repository.",
          "type": "string"
        },
        "privateKey": {
          "description": "Private sshKey algorithm of git repository.",
          "type": "string",
          "x-ms-secret": true
        },
        "strictHostKeyChecking": {
          "description": "Strict host key checking or not.",
          "enum": [
            "Strict",
            "None"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "StrictHostKeyCheckingEnum",
            "modelAsString": true
          }
        }
      }
    },
    "MiddlewareGitPatternRepository": {
      "description": "Git repository property payload for config server",
      "required": [
        "name",
        "uri"
      ],
      "type": "object",
      "properties": {
        "name": {
          "description": "Name of the repository",
          "type": "string"
        },
        "pattern": {
          "description": "Collection of pattern of the repository",
          "uniqueItems": false,
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "uri": {
          "description": "URI of the repository",
          "type": "string"
        },
        "label": {
          "description": "Label of the repository",
          "type": "string"
        },
        "searchPaths": {
          "description": "Searching path of the repository",
          "uniqueItems": false,
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "username": {
          "description": "Username of git repository basic auth.",
          "type": "string"
        },
        "password": {
          "description": "Password of git repository basic auth.",
          "type": "string",
          "x-ms-secret": true
        },
        "hostKey": {
          "description": "Public sshKey of git repository.",
          "type": "string"
        },
        "hostKeyAlgorithm": {
          "description": "SshKey algorithm of git repository.",
          "type": "string"
        },
        "privateKey": {
          "description": "Private sshKey algorithm of git repository.",
          "type": "string",
          "x-ms-secret": true
        },
        "strictHostKeyChecking": {
          "description": "Strict host key checking or not.",
          "enum": [
            "Strict",
            "None"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "StrictHostKeyCheckingEnum",
            "modelAsString": true
          }
        }
      }
    },
    "MiddlewareConfigServerSettingsValidateResult": {
      "description": "Validation result for config server settings",
      "type": "object",
      "properties": {
        "isValid": {
          "description": "Indicate if the config server settings are valid",
          "enum": [
            "true",
            "false"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "EnumAsBoolean",
            "modelAsString": true
          }
        },
        "details": {
          "description": "The detail validation results",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ConfigServerSettingsErrorRecord"
          },
          "x-ms-identifiers": []
        }
      }
    },
    "ConfigServerSettingsErrorRecord": {
      "description": "Error record of the config server settings",
      "type": "object",
      "properties": {
        "name": {
          "description": "The name of the config server settings error record",
          "type": "string"
        },
        "uri": {
          "description": "The uri of the config server settings error record",
          "type": "string"
        },
        "messages": {
          "description": "The detail error messages of the record",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    }
  },
  "parameters": {
    "JavaEnvironmentNameParameter": {
      "name": "javaEnvironmentName",
      "in": "path",
      "description": "Name of the Java Environment.",
      "required": true,
      "type": "string",
      "pattern": "^[-\\w\\._\\(\\)]+$"
    },
    "ConfigServerNameParameter": {
      "name": "configServerName",
      "in": "path",
      "description": "Name of the Config Server.",
      "required": true,
      "type": "string",
      "pattern": "^[-\\w\\._\\(\\)]+$"
    },
    "ConfigServerEnvelopeParameter": {
      "name": "configServerResource",
      "in": "body",
      "description": "Parameters for the update operation",
      "required": true,
      "schema": {
        "$ref": "#/definitions/MiddlewareConfigServer"
      }
    },
    "ConfigServerSettingsParameter": {
      "name": "configServerSettings",
      "in": "body",
      "description": "Config server settings to be validated",
      "required": true,
      "schema": {
        "$ref": "#/definitions/MiddlewareConfigServerSettings"
      }
    },
    "EurekaServerNameParameter": {
      "name": "eurekaServerName",
      "in": "path",
      "description": "Name of the Eureka Server.",
      "required": true,
      "type": "string",
      "pattern": "^[-\\w\\._\\(\\)]+$"
    },
    "EurekaServerEnvelopeParameter": {
      "name": "eurekaServerResource",
      "in": "body",
      "description": "Parameters for the update operation",
      "required": true,
      "schema": {
        "$ref": "#/definitions/MiddlewareEurekaServer"
      }
    }
  },
  "securityDefinitions": {
    "azure_auth": {
      "flow": "implicit",
      "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize",
      "scopes": {
        "user_impersonation": "impersonate your user account"
      },
      "type": "oauth2",
      "description": "Azure Active Directory OAuth2 Flow"
    }
  },
  "security": [
    {
      "azure_auth": [
        "user_impersonation"
      ]
    }
  ]
}
